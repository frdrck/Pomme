#!/usr/bin/python
import os
import cgi
import re

import db
db = db.db()

BASE_HREF = "http://asdf.us/im/"
PARAMLIST = "addr start limit name interface random"
LIMIT = 24

def get_params (paramlist):
	paramkeys = paramlist.split()
	form = {}
	qs = os.environ['QUERY_STRING'] or ""
	if len(qs):
		pairs = qs.replace("&amp;", "&").split("&")
		for pair in pairs:
			k,v = pair.split("=", 1)
			form[k] = v
	params = {}
	for key in paramkeys:
		if key in form:
			params[key] = sanitize(form[key])
		else:
			params[key] = None
	return params
def sanitize (str):
	return re.sub(r'\W+', '', str)
def get_files (params):
	sql = "SELECT * FROM im_cmd "
	args = []
	where = []

	if params['start'] is not None:
		where.append("id < %s")
		args.append(params['start'])
	if params['name'] is not None:
		where.append("name=%s")
		args.append(params['name'])
	if len(where):
		sql += "WHERE "
		sql += " AND ".join(where)
		sql += " "

	if params['random'] is not None:
		sql += "ORDER BY RAND() "
	else:
		sql += "ORDER BY id DESC "
	sql += "LIMIT %s"

	if params['limit'] is not None:
		args.append( int(params['limit']) )
	else:
		args.append( LIMIT )
	db.execute(sql, args)
	rows = db.cursor.fetchall ()
	return rows

def is_image (img):
	if "jpeg" in img:
		return True
	if "jpg" in img:
		return True
	if "gif" in img:
		return True
	if "png" in img:
		return True
	return False


params = get_params(PARAMLIST)

print "Content-type: text/html"
print "Pragma: no-cache"
print
print """

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<title> Take your pic! </title>
<style type="text/css">
html,body{width:100%;height:100%;}
	"""
if params['interface'] is not None and params['interface'] == "off":
	print """
body
	{
	background-color: white;
	padding: 0; margin: 0;
	}
#images
	{
	margin: 12px 0 0 8px;
	}
div, div img
	{
	padding: 0; margin: 0;
	margin-left: -4px;
	margin-top: -4px;
	}
"""
else:
	print """
body
	{
	background-color: #eee;
	background-image: -webkit-gradient(
    linear,
    left bottom,
    left top,
    color-stop(0.32, rgb(245,238,235)),
    color-stop(0.66, rgb(252,252,252))
);
background-image: -moz-linear-gradient(
    center bottom,
    rgb(245,238,235) 32%,
    rgb(252,252,252) 66%
);
"""
print """
	overflow-y: scroll;
	}
html
	{
	padding-bottom: 200px;
	}
#images
	{
	width: 100%;
	}
#images div
	{
	width: 200px;
	display: inline-block;
	}
div img
	{
	max-width: 200px;
	max-height: 200px;
	border: 0;
	}
#dump
	{
	position: fixed;
	left: 0;
	bottom: 10px;
	padding: 10px;
	width: 100%;
	border-bottom: 2px solid #000;
	background-color: #f8f8f8;
	border-top: 1px solid #888;
	}
#dump #rebus
	{
	clear: right;
	width: 90%;
	max-height: 700px;
	overflow-y: scroll;
	background-color: #fff;
	padding-bottom: 5px;
	border-bottom: 1px solid #ddd;
	margin-bottom: 5px;
	}
#dump #rebus img
	{
	display: inline;
	max-width: 400px;
	max-height: 400px;
	margin-right: -4px;
	}
#dump #urlz
	{
	width: 90%;
	font-size: 15px;
	}
#dump #clear
	{
	font-size: 15px;
	}
#help
	{
	position: fixed;
	top: 10px;
	right: 10px;
	cursor: pointer;
	text-align: right;
	font-family: sans-serif;
	}
#help b
	{
	padding: 5px;
	background-color: #f8f4fb;
	display: block;
	max-width: 160px;
	text-align: right;
	}
#help #keys
	{
	clear: both;
	background-color: #f8f8f8;
	padding: 5px;
	display: none;
	width: 120px;
	font-size: 12px;
	}
#nextpage
	{
	position: fixed;
	right: 70px;
	font-family: sans-serif;
	top: 10px;
	padding: 5px;
	background-color: rgba(255,255,255,0.7);
  }
#nextpage a
  {
	color: #33f;
	}
.rtlink
	{
	display: block;
	width: 100%;
	text-align: right;
	}
</style>
</head>
<body>
<div id="help"><!--section-->
	<b>keys</b>
	<div id="keys">ESC toggle<br>C clear<br>R reverse<br>BACKSPACE delete</div>
</div><!--section-->
<div id="dump"><!--section-->
	<div id="rebus"></div>
	<input id="urlz" type="text" />
	<button id="clear">clear</button>
</div><!--section-->
<div id="images"><!--section-->
"""


files = get_files(params)
count = 0
for f in files:
	# url = BASE_HREF + f.replace(" ","%20")
	url = BASE_HREF + f[5] + "/" + f[7]
	print "<div><img src='%s'/></div>" % (url)
print "</div><!--section-->"

lowest_id = files[-1][0]

qs = ["start=%d" % lowest_id, "limit=%d" % LIMIT]
if params['name'] is not None:
	qs.append("name=%s" % params['name'])
print "<div id='nextpage'>"
print "<a href='/im/'>&larr; editor</a>"
print "|"
print "<a href='?random=1'>random</a>"
print "|"
print "<a href='?%s'>next &rarr;</a>" % "&".join(qs)
print "</div>"
print """
</body>
<script type="text/javascript"></script>
<script type="text/javascript" src="/js/jquery.js"></script>
<script type="text/javascript">
var Dump =
	{
	pick: function ()
		{
		Dump.pickUrl( $(this).attr("src") )
		},
	pickUrl: function (url)
		{
		$("#rebus").append ($ ("<img>").attr ("src", url))
		$("#rebus").show()
		$("#urlz").val( $("#urlz").val() + " " + url )
		return false
		},
	clear: function ()
		{
		$("#rebus").html("")
		$("#urlz").val("")
		},
	backspace: function ()
		{
		$("#rebus img:last").remove()
		var urllist = $("#urlz").val().split(" ")
		urllist.pop()
		$("#urlz").val( urllist.join(" ") )
		},
	reverse: function ()
		{
		urllist = $("#urlz").val().split(" ")
		Dump.clear()
		for (i in urllist.reverse())
			if (urllist[i])
				Dump.pickUrl(urllist[i])
		},
	}
var Main =
	{
	editing: false,
	kp: function (event)
		{
		switch (event.keyCode)
			{
			// BS
			case 8:
				if (! Main.editing)
					Dump.backspace()
				return false
			// C
			case 67:
				if (! Main.editing)
					Dump.clear()
				break
			// R
			case 82:
				if (! Main.editing)
					Dump.reverse()
				break
			// ESC
			case 27:
			// H
			case 72:
				if (! Main.editing)
					$("#rebus").toggle()
				break
			}
		return true
		},
	poll: function ()
		{
		},
	pollCallback: function ()
		{
		},
	init: function ()
		{
		$(document).keydown(Main.kp)
		$("#urlz").focus(function(){ Main.editing = true })
		$("#urlz").blur(function(){ Main.editing = false })
		$("#clear").live("click", Dump.clear)
		$("#help").click(function(){ $("#keys").toggle() })
		$("div img").live("click", Dump.pick)
		Dump.clear()
		}
	}
"""
if params['interface'] is not None and params['interface'] == "off":
	print """
$("#nextpage,#help,#dump").hide()
$("body").css({"margin": 0, "padding": 0, "overflow": hidden, "background-color": white})
"""
else:
	print "Main.init()"
print """
</script>
</html>
"""

